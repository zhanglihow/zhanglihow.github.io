<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Zhangli&#39;s Blog</title>
    <link>https://zhanglihow.github.io/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Zhangli&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CH</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you likes to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 23 Jul 2018 18:31:23 +0800</lastBuildDate>
    
	<atom:link href="https://zhanglihow.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>栈和队列基础题</title>
      <link>https://zhanglihow.github.io/post/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E5%9F%BA%E7%A1%80%E9%A2%98/</link>
      <pubDate>Mon, 23 Jul 2018 18:31:23 +0800</pubDate>
      
      <guid>https://zhanglihow.github.io/post/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E5%9F%BA%E7%A1%80%E9%A2%98/</guid>
      <description>1，设计一个有getMin功能的栈 题目：实现一个特殊的栈，在实现栈的基本功能的基础上，再实现返回栈中的最小值 要求： 1，pop、push、getMin操作的时间复杂度都是O（1） 2，设计的栈类型可以使用现成的栈的结构 public class Stack1 { private Stack&amp;lt;Integer&amp;gt; stackMin; private Stack&amp;lt;Integer&amp;gt; stackData; public Stack1(){ stackMin=new Stack&amp;lt;&amp;gt;(); stackData=new Stack&amp;lt;&amp;gt;(); } public int getMin(){ if(stackMin.isEmpty()){ throw new RuntimeException(&amp;quot;stack is null&amp;quot;); } return stackMin.peek(); } //方案一 //节省空间，pop步骤多 public void push(int newNum){ if(stackMin.isEmpty()){ stackMin.push(newNum); }else{ if(getMin()&amp;lt;=newNum){ stackMin.push(newNum); } } stackData.push(newNum); } public int pop(){ if(stackData.isEmpty()){ throw new RuntimeException(&amp;quot;stack is null&amp;quot;); } int value=stackData.pop(); if(value==getMin()){ stackMin.pop(); } return value; } //-------------------------- //方案2 //比方案1多费空间，但省时间 public void push2(int newNum){ if(stackMin.</description>
    </item>
    
  </channel>
</rss>